static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: app
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: service-https
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_params:
              tls_maximum_protocol_version: TLSv1_3
              tls_minimum_protocol_version: TLSv1_3
            tls_certificates:
            # The following self-signed certificate pair is generated using:
            # $ openssl req -x509 -newkey rsa:2048 -keyout a/front-proxy-key.pem -out  a/front-proxy-crt.pem -days 3650 -nodes -subj '/CN=front-envoy'
            #
            # Instead of feeding it as an inline_string, certificate pair can also be fed to Envoy
            # via filename. Reference: https://envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/base.proto#config-core-v3-datasource.
            #
            # Or in a dynamic configuration scenario, certificate pair can be fetched remotely via
            # Secret Discovery Service (SDS). Reference: https://envoyproxy.io/docs/envoy/latest/configuration/security/secret.
            - certificate_chain:
                inline_string: |
                  -----BEGIN CERTIFICATE-----
                  MIIB5zCCAY0CFAkcvqaQzyzZiHK+tQuMn8iOFjs+MAoGCCqBHM9VAYN1MHYxCzAJ
                  BgNVBAYTAkNOMRIwEAYDVQQIDAlZb3VyU3RhdGUxETAPBgNVBAcMCFlvdXJDaXR5
                  MRkwFwYDVQQKDBBZb3VyT3JnYW5pemF0aW9uMREwDwYDVQQLDAhZb3VyVW5pdDES
                  MBAGA1UEAwwJMTI3LjAuMC4xMB4XDTI0MDUxMDAyNTQxMVoXDTI0MDYwOTAyNTQx
                  MVowdjELMAkGA1UEBhMCQ04xEjAQBgNVBAgMCVlvdXJTdGF0ZTERMA8GA1UEBwwI
                  WW91ckNpdHkxGTAXBgNVBAoMEFlvdXJPcmdhbml6YXRpb24xETAPBgNVBAsMCFlv
                  dXJVbml0MRIwEAYDVQQDDAkxMjcuMC4wLjEwWTATBgcqhkjOPQIBBggqgRzPVQGC
                  LQNCAATr70v/nLiQtg6r9w7QeMSCn53U570y4GRo0h/Bin1f2s8bLH26gh26McHz
                  zyvQJ7Xbme7qsCy9DMcUSrdnF9gtMAoGCCqBHM9VAYN1A0gAMEUCIQCDD/CEcBMN
                  LgghG3Fp6wC+0YQcDZfQ64XcLddmiX7DSwIgJumfqg1SAJO36RlwIGzlZcWewrk5
                  vrr2hb7kyNW9gTA=
                  -----END CERTIFICATE-----

              private_key:
                inline_string: |
                  -----BEGIN EC PARAMETERS-----
                  BggqgRzPVQGCLQ==
                  -----END EC PARAMETERS-----
                  -----BEGIN EC PRIVATE KEY-----
                  MHcCAQEEIHSbTzhpxAndo6DtX8T7Cv5elsyNB4cIeHLCyH3cVgaooAoGCCqBHM9V
                  AYItoUQDQgAE6+9L/5y4kLYOq/cO0HjEgp+d1Oe9MuBkaNIfwYp9X9rPGyx9uoId
                  ujHB888r0Ce125nu6rAsvQzHFEq3ZxfYLQ==
                  -----END EC PRIVATE KEY-----

  clusters:
  - name: service-https
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: service-https
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 20000
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          tls_params:
            tls_maximum_protocol_version: TLSv1_3
            tls_minimum_protocol_version: TLSv1_3
